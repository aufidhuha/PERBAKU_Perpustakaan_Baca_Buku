/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package latihanKu;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author ASUS
 */
public class kategoriPanel extends javax.swing.JPanel {

    /**
     * Creates new form kategoriPanel
     */
    public kategoriPanel() {
        initComponents();
        data_kategori();
        reset();
        auto_id();
    }
    
    void data_kategori(){
        DefaultTableModel model =  new DefaultTableModel();
        
        model.addColumn("ID Kategori");
        model.addColumn("Nama Kategori");
        
        try {
            String sql = "SELECT * FROM kategori";
            Connection cnVar = koneksi.getKoneksi();
            
            Statement stVar = cnVar.createStatement();
            ResultSet rsVar = stVar.executeQuery(sql);
            
            while (rsVar.next()) {                
                String idKategori = rsVar.getString("id_kategori");
                String namaKategori = rsVar.getString("nama_kategori");
                
                Object data[] = {idKategori, namaKategori};
                model.addRow(data);
            }
            
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Error : " + sQLException.getMessage());
        }
        tabelKategori.setModel(model);
    }

    
    private void auto_id(){
        
        try {
            Connection cnVar = koneksi.getKoneksi();
            Statement stVar = cnVar.createStatement();
            String sql = "SELECT * FROM kategori ORDER BY id_kategori DESC";
            ResultSet rsVar = stVar.executeQuery(sql);
            
            if (rsVar.next()) {
                String NoFaktur = rsVar.getString("id_kategori").substring(4);
                String transaksi = "" + (Integer.parseInt(NoFaktur) + 1);
                String nol = "";
                
                if (transaksi.length() == 1) {
                    nol = "00";
                } else if (transaksi.length() == 2) {
                    nol = "0";
                } else if (transaksi.length() == 3) {
                    nol = "";
                } 
                
                txtIDKategori.setText("KTBK" + nol + transaksi);
            } else {
                txtIDKategori.setText("KTBK001");
            }
            
            rsVar.close();
            stVar.close();
            
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Auto Number Transaksi Error " + sQLException.getMessage());
        }
        txtIDKategori.setEditable(false);
    }
    
    
    void reset(){
        txtIDKategori.setText(null);
        txtNamaKategori.setText(null);
        auto_id();
        buttonSimpan.setText("SIMPAN");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIDKategori = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNamaKategori = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelKategori = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        buttonSimpan = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        buttonBatal = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("KATEGORI BUKU");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(840, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("KODE KATEGORI");

        txtIDKategori.setBackground(new java.awt.Color(232, 232, 232));
        txtIDKategori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIDKategori.setForeground(new java.awt.Color(0, 0, 0));
        txtIDKategori.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("KATEGORI BUKU");

        txtNamaKategori.setBackground(new java.awt.Color(232, 232, 232));
        txtNamaKategori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNamaKategori.setForeground(new java.awt.Color(0, 0, 0));
        txtNamaKategori.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        tabelKategori.setBackground(new java.awt.Color(255, 255, 255));
        tabelKategori.setForeground(new java.awt.Color(0, 0, 0));
        tabelKategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKategoriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelKategori);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TOMBOL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        buttonSimpan.setBackground(new java.awt.Color(40, 167, 69));
        buttonSimpan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        buttonSimpan.setText("SIMPAN");
        buttonSimpan.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonHapus.setBackground(new java.awt.Color(220, 53, 69));
        buttonHapus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonHapus.setForeground(new java.awt.Color(255, 255, 255));
        buttonHapus.setText("HAPUS");
        buttonHapus.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonBatal.setBackground(new java.awt.Color(108, 117, 125));
        buttonBatal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonBatal.setForeground(new java.awt.Color(255, 255, 255));
        buttonBatal.setText("BATAL");
        buttonBatal.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(buttonSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtNamaKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(413, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNamaKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_buttonBatalActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        // TODO add your handling code here:
        String idKategori = txtIDKategori.getText();
        String namaKategori = txtNamaKategori.getText();
        
        if (idKategori.isBlank() || namaKategori.isBlank()) {
            JOptionPane.showMessageDialog(null, "Harap mengisi data secara keseluruhan", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            Connection cnVar = koneksi.getKoneksi();
            String sqlCheck = "SELECT * FROM kategori WHERE id_kategori = ?";
            
            PreparedStatement psVarCheck = cnVar.prepareStatement(sqlCheck);
            psVarCheck.setString(1, idKategori);
            ResultSet rsVarCheck = psVarCheck.executeQuery();
            
            if (!rsVarCheck.next()) {
                
            String sqlInsert = "INSERT INTO kategori VALUES (?, ?)";
            
            PreparedStatement psVarInsert = cnVar.prepareStatement(sqlInsert);
            psVarInsert.setString(1, idKategori);
            psVarInsert.setString(2, namaKategori);
            psVarInsert.execute();
            
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
            psVarInsert.close();
            
            } else {
                
            String sqlUpdate = "UPDATE kategori SET nama_kategori = ? WHERE id_kategori = ?";
            
            PreparedStatement psVarUpdate = cnVar.prepareStatement(sqlUpdate);
            psVarUpdate.setString(1, namaKategori);
            psVarUpdate.setString(2, idKategori);
            psVarUpdate.execute();
            
            JOptionPane.showMessageDialog(null, "Data berhasil diUbah");
            psVarUpdate.close();
                
            }
            
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Error : " + sQLException.getMessage());
        }
        data_kategori();
        reset();
    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void tabelKategoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKategoriMouseClicked
        // TODO add your handling code here:
        int choiceRow = tabelKategori.getSelectedRow();
        
        String idKategori = tabelKategori.getValueAt(choiceRow, 0).toString();
        String namaKategori = tabelKategori.getValueAt(choiceRow, 1).toString();
        
        txtIDKategori.setText(idKategori);
        txtIDKategori.setEditable(false);
        txtNamaKategori.setText(namaKategori);    
        buttonSimpan.setText("UBAH");
    }//GEN-LAST:event_tabelKategoriMouseClicked

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        String idKategori = txtIDKategori.getText();
        
        if(idKategori.isBlank() || txtNamaKategori.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Harap memilih data yang ingin dihapus");
            return;
        }
        
        try {
            
        int yesOrNo = JOptionPane.showConfirmDialog(null, "Apakah anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (yesOrNo == JOptionPane.YES_OPTION) {
            
            String sqlDelete = "DELETE FROM kategori WHERE id_kategori = ?";
            Connection cnVar = koneksi.getKoneksi();
            PreparedStatement psVar = cnVar.prepareStatement(sqlDelete);
            
            psVar.setString(1, idKategori);
            psVar.execute();
            
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        }
        
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Error : " + sQLException.getMessage());
        }
        
        reset();
        data_kategori();
    }//GEN-LAST:event_buttonHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBatal;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelKategori;
    private javax.swing.JTextField txtIDKategori;
    private javax.swing.JTextField txtNamaKategori;
    // End of variables declaration//GEN-END:variables
}
